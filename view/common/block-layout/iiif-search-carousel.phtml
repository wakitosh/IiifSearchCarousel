<?php
// $rows, $ratioDefault, $ratioSm, $ratioMd, $bpSm, $bpMd, $duration, $blockId, $customCss, $resourceTargets, $trimTop, $trimRight, $trimBottom, $trimLeft, $showSearch
// Resource targets: items / media / item_sets
$controllerMap = [
  'items' => 'item',
  'media' => 'media',
  'item_sets' => 'item-set',
];
$initialTarget = is_array($resourceTargets) && $resourceTargets ? $resourceTargets[0] : 'items';
$controller = $controllerMap[$initialTarget] ?? 'item';
$searchAction = $this->url('site/resource', ['controller' => $controller, 'action' => 'browse'], true);
$searchValue = $this->escapeHtml($this->params()->fromQuery('fulltext_search', ''));
// Pick logic from fulltext_logic or logic; default AND
$logicParam = $this->params()->fromQuery('fulltext_logic', $this->params()->fromQuery('logic', 'and'));
$logic = (strtolower((string) $logicParam) === 'or') ? 'or' : 'and';
// Use module text domain for strings.
$__placeholder = 'Keywords';
if (strpos((string) $this->lang(), 'ja') === 0) {
  $__placeholder = 'キーワード';
}
$__buttonLabel = $this->plugin('translate')->__invoke('Search', 'iiif-search-carousel');

// Ensure truncateLen is defined (0 disables truncation)
$truncateLen = isset($truncateLen) ? (int) $truncateLen : 0;

// Helper: truncate title safely (UTF-8). 0 = no truncation.
$__truncate = function ($s) use ($truncateLen) {
  $s = (string) $s;
  $n = (int) ($truncateLen ?? 0);
  if ($n <= 0) return $s;
  if (function_exists('mb_strlen') && function_exists('mb_substr')) {
    return (mb_strlen($s, 'UTF-8') > $n)
      ? (mb_substr($s, 0, $n, 'UTF-8') . '…')
      : $s;
  }
  return (strlen($s) > $n) ? (substr($s, 0, $n) . '…') : $s;
};

// Helper: format a percentage with up to 1 decimal without trailing .0
$__fmtPct = function ($v) {
  $v = (float) $v;
  $s = number_format($v, 1, '.', '');
  if (substr($s, -2) === '.0') {
    return substr($s, 0, -2);
  }
  return $s;
};

// Precompute region if any trim set
$__hasTrim = ($trimTop > 0 || $trimRight > 0 || $trimBottom > 0 || $trimLeft > 0);
$__region = null;
if ($__hasTrim) {
  $x = max(0.0, (float) $trimLeft);
  $y = max(0.0, (float) $trimTop);
  $w = max(0.1, 100.0 - (float) $trimLeft - (float) $trimRight);
  $h = max(0.1, 100.0 - (float) $trimTop - (float) $trimBottom);
  $__region = 'pct:' . $__fmtPct($x) . ',' . $__fmtPct($y) . ',' . $__fmtPct($w) . ',' . $__fmtPct($h);
}
?>
<section class="iiif-sc" id="iiif-sc-<?php echo (int) $blockId; ?>">
  <style>
    /* Scoped responsive aspect ratios for this block */
    #iiif-sc-<?php echo (int) $blockId; ?> .iiif-sc__bg { aspect-ratio: <?php echo $this->escapeHtml($ratioDefault); ?>; }
  <?php if (!empty($ratioMd) && !empty($bpMd)): ?>
      @media (max-width: <?php echo (int) $bpMd; ?>px) {
        #iiif-sc-<?php echo (int) $blockId; ?> .iiif-sc__bg { aspect-ratio: <?php echo $this->escapeHtml($ratioMd); ?>; }
      }
  <?php endif; ?>
<?php if (!empty($ratioSm) && !empty($bpSm)): ?>
    @media (max-width: <?php echo (int) $bpSm; ?>px) {
      #iiif-sc-<?php echo (int) $blockId; ?> .iiif-sc__bg { aspect-ratio: <?php echo $this->escapeHtml($ratioSm); ?>; }
    }
<?php endif; ?>
  </style>
  <?php if (!empty($customCss)): ?>
      <style>
        /* Custom CSS for #iiif-sc-<?php echo (int) $blockId; ?> */
        <?php echo $customCss; ?>
      </style>
  <?php endif; ?>
  <div class="iiif-sc__bg">
    <?php foreach ($rows as $i => $r): ?>
      <?php
        $imgUrl = $r['image_url'] ?? '';
        if ($__hasTrim && is_string($imgUrl) && $imgUrl !== '') {
          // Replace the region segment '/full/' with '/pct:x,y,w,h/'.
          // Be conservative: only replace the first occurrence of '/full/'.
          $pos = strpos($imgUrl, '/full/');
          if ($pos !== false) {
            $imgUrl = substr($imgUrl, 0, $pos + 1) . $__region . '/' . substr($imgUrl, $pos + 6);
          }
        }
      ?>
      <?php
        $href = isset($r['related_url']) && $r['related_url'] !== '' ? trim((string) $r['related_url']) : null;
        $debugOriginal = $href;
        if (is_string($href)) {
          // Internal token strict patterns
          if (preg_match('/^omeka:media:(\d+)$/', $href, $mm)) {
            $id = (int) $mm[1];
            if ($id > 0) {
              $site = $this->currentSite();
              $slug = $site ? $site->slug() : 'site';
              $href = $this->url('site/resource-id', [
                'site-slug' => $slug,
                'controller' => 'media',
                'id' => $id,
              ], ['reuse_result_params' => false], false);
            } else { $href = null; }
          }
          elseif (preg_match('/^omeka:item:(\d+)$/', $href, $mi)) {
            $id = (int) $mi[1];
            if ($id > 0) {
              $site = $this->currentSite();
              $slug = $site ? $site->slug() : 'site';
              $href = $this->url('site/resource-id', [
                'site-slug' => $slug,
                'controller' => 'item',
                'id' => $id,
              ], ['reuse_result_params' => false], false);
            } else { $href = null; }
          }
          // Unsafe show pages without id (with optional query/fragment) -> drop
          elseif (preg_match('#/(?:s/[^/]+/)?(?:item|media)/show(?:[?#].*)?$#', $href)) {
            $href = null;
          }
        }
      ?>
      <?php $labelFull = (string) ($r['label'] ?? ''); $labelShort = $__truncate($labelFull); ?>
      <a class="iiif-sc__slide<?php if ($i === 0) echo ' is-active'; ?>"<?php if ($href): ?> href="<?php echo $this->escapeHtml($href); ?>"<?php endif; ?> data-orig="<?php echo $this->escapeHtml($debugOriginal); ?>" data-final="<?php echo $this->escapeHtml((string)$href); ?>" aria-label="<?php echo $this->escapeHtml($labelFull); ?>">
        <img src="<?php echo $this->escapeHtml($imgUrl); ?>" alt="" loading="eager" decoding="async">
        <?php if ($labelFull !== ''): ?>
          <span class="iiif-sc__caption"<?php if ($labelShort !== $labelFull): ?> title="<?php echo $this->escapeHtml($labelFull); ?>"<?php endif; ?>>
            <?php echo $this->escapeHtml($labelShort); ?>
          </span>
        <?php endif; ?>
      </a>
    <?php endforeach; ?>
  </div>

  <?php if (!empty($showSearch)): ?>
    <div class="iiif-sc__overlay">
    <form class="iiif-sc__search search-form search-form--inline" method="get" action="<?php echo $searchAction; ?>" aria-label="<?php echo $this->escapeHtml($this->plugin('translate')->__invoke('Carousel search form', 'iiif-search-carousel')); ?>">
      <div class="iiif-sc__controls">
        <input type="search" id="multi-search-input" name="fulltext_search" value="<?php echo $searchValue; ?>" placeholder="<?php echo $this->escapeHtml($__placeholder); ?>" aria-label="<?php echo $this->escapeHtml($this->plugin('translate')->__invoke('Search keywords', 'iiif-search-carousel')); ?>" pattern=".*\S.*" required class="search-form__input">
        <fieldset class="search-form__logic" role="group" aria-label="Logic">
          <label class="logic-option">
            <input type="radio" name="logic" value="and" <?php echo ($logic === 'and') ? 'checked' : ''; ?>>
            <span>AND</span>
          </label>
          <label class="logic-option">
            <input type="radio" name="logic" value="or" <?php echo ($logic === 'or') ? 'checked' : ''; ?>>
            <span>OR</span>
          </label>
        </fieldset>
        <button type="submit" class="button"><?php echo $this->escapeHtml($__buttonLabel); ?></button>
      </div>
      <?php
        // Advanced search link (right-aligned), carry current fulltext_search
        $advUrl = $this->url('site/resource', ['controller' => 'item', 'action' => 'search'], true);
        $advHref = $advUrl . '?fulltext_search=' . rawurlencode((string) $this->params()->fromQuery('fulltext_search', '')) . '&logic=' . rawurlencode($logic);
        $__advLabel = $this->plugin('translate')->__invoke('Advanced search', 'iiif-search-carousel');
        if (strpos((string) $this->lang(), 'ja') === 0) { $__advLabel = '詳細検索'; }
      ?>
      <div class="iiif-sc__tools-row">
        <a class="iiif-sc__advanced-link" href="<?php echo $this->escapeHtml($advHref); ?>"><?php echo $this->escapeHtml($__advLabel); ?></a>
      </div>
      <?php /* Build example keywords with traceability; if $exampleTerms is empty, fall back to slide labels. */ ?>
      <?php
        $labelExample = $this->plugin('translate')->__invoke('For example:', 'iiif-search-carousel');
        $controllerMap = [
          'items' => 'item',
          'media' => 'media',
          'item_sets' => 'item-set',
        ];
        $initialTarget = is_array($resourceTargets) && $resourceTargets ? $resourceTargets[0] : 'items';
        $controller = $controllerMap[$initialTarget] ?? 'item';
        $baseUrl = $this->url('site/resource', ['controller' => $controller, 'action' => 'browse'], true);

        // Build source list: prefer provided $exampleTerms; if empty, use slide labels.
        $exampleSource = [];
        if (isset($exampleTerms) && is_array($exampleTerms) && $exampleTerms) {
          $exampleSource = $exampleTerms;
        } else {
          if (isset($rows) && is_array($rows)) {
            foreach ($rows as $rr) {
              if (!empty($rr['label'])) {
                $exampleSource[] = (string) $rr['label'];
              }
              if (count($exampleSource) >= 12) break;
            }
          }
        }

        // Formatter for example terms
        $cjkMaxLen = isset($cjkMaxLen) ? (int) $cjkMaxLen : 8;
        if ($cjkMaxLen < 2) { $cjkMaxLen = 2; }
        if ($cjkMaxLen > 32) { $cjkMaxLen = 32; }
        $headBiasDecay = isset($headBiasDecay) ? (float) $headBiasDecay : 0.82;
        if ($headBiasDecay < 0.5) { $headBiasDecay = 0.5; }
        if ($headBiasDecay > 0.99) { $headBiasDecay = 0.99; }
        $jsonPath = __DIR__ . '/../../../config/stopwords.json';

  $formatExample = function ($s) use ($cjkMaxLen, $headBiasDecay, $jsonPath) {
          $s = (string) $s;
          $s = preg_replace('/[\[\]\(\)\<\>]/u', '', $s);
          $s = preg_replace('/^[\p{P}\p{S}\s\x{3000}]+|[\p{P}\p{S}\s\x{3000}]+$/u', '', $s);
          $tokens = preg_split('/[\s\x{3000}]+/u', $s, -1, PREG_SPLIT_NO_EMPTY);

          $isNumeric = static function (string $str): bool {
            if ($str === '') return false;
            if (preg_match('/^[0-9]+$/u', $str)) return true;
            if (preg_match('/^[\x{FF10}-\x{FF19}]+$/u', $str)) return true;
            return false;
          };
          $gLen = static function (string $str): int {
            if ($str === '') return 0;
            if (preg_match_all('/\X/u', $str, $m)) return count($m[0]);
            return mb_strlen($str, 'UTF-8');
          };
          $gSub = static function (string $str, int $n) use ($gLen): string {
            if ($n <= 0 || $str === '') return '';
            if (preg_match_all('/\X/u', $str, $m)) return implode('', array_slice($m[0], 0, $n));
            return mb_substr($str, 0, $n, 'UTF-8');
          };

          static $STOP = null;
          if ($STOP === null) {
            $STOP = [];
            if (is_readable($jsonPath)) {
              $raw = @file_get_contents($jsonPath);
              $dec = is_string($raw) && $raw !== '' ? json_decode($raw, true) : null;
              if (is_array($dec)) $STOP = $dec;
            }
          }

          $weightedPick = static function (array $cands): string {
            // Filter invalid/empty weights and values first.
            $valid = [];
            foreach ($cands as $c) {
              $v = isset($c['value']) ? (string) $c['value'] : '';
              $w = isset($c['weight']) ? (float) $c['weight'] : 0.0;
              if ($v === '' || $w <= 0.0 || !is_finite($w)) continue;
              $valid[] = ['value' => $v, 'weight' => $w];
            }
            if (!$valid) return '';
            // Sum weights with finite check.
            $sum = 0.0; $maxW = -INF; $maxV = '';
            foreach ($valid as $c) {
              $w = (float) $c['weight'];
              $sum += $w;
              if ($w > $maxW) { $maxW = $w; $maxV = (string) $c['value']; }
            }
            if (!is_finite($sum) || $sum <= 0.0) return $maxV;
            // Draw uniform threshold in [0, 1) to avoid sum boundary.
            try {
              $r = random_int(0, 1000000000 - 1) / 1000000000.0; // [0,1)
            } catch (\Throwable $e) {
              $r = (mt_rand() & 0x7fffffff) / ((float) (mt_getrandmax() + 1));
            }
            $threshold = $r * $sum; // [0, sum)
            $acc = 0.0; $eps = 1e-12;
            foreach ($valid as $c) {
              $acc += (float) $c['weight'];
              if ($acc + $eps >= $threshold) return (string) $c['value'];
            }
            // Fallback: return argmax to avoid tail bias.
            return $maxV;
          };

          // Language detection and stopword set
          $strAll = implode(' ', $tokens);
          $langs = [];
          if (preg_match('/[\x{3040}-\x{30FF}\x{4E00}-\x{9FFF}]/u', $strAll)) $langs[] = 'ja';
          if (preg_match('/[A-Za-z]/', $strAll)) array_push($langs, 'en', 'de', 'fr', 'es', 'it', 'la');
          if (preg_match('/[\x{0370}-\x{03FF}]/u', $strAll)) $langs[] = 'el';
          if (!$langs) $langs = ['en'];
          $stop = [];
          foreach ($langs as $lang) if (!empty($STOP[$lang])) foreach ((array) $STOP[$lang] as $w) $stop[$w] = true;
          $textSrc = ($strAll !== '') ? $strAll : $s;

          $path = '';
          $chosen = '';
          $candNonCjk = [];
          $DECAY = $headBiasDecay;
          // Strengthen bias exponent further when strong head-bias.
          $biasExp = ($DECAY <= 0.6) ? 2.4 : 1.0;
          // When strong head-bias (<=0.6), trim tail more aggressively.
          $tailTrimRatio = ($DECAY <= 0.6) ? 0.5 : 1.0;
          $total = count($tokens);
          $maxIdx = $total > 0 ? (int) floor(($total * $tailTrimRatio) - 1) : -1;
          foreach ($tokens as $idx => $t) {
            if ($tailTrimRatio < 1.0 && $idx > $maxIdx) { continue; }
            $tStripped = trim($t, ".,;:!?\"'()[]<>");
            if ($tStripped === '') continue;
            if ($isNumeric($tStripped)) continue;
            // Exclude 1-character tokens for non-CJK weighted selection.
            if ($gLen($tStripped) < 2) continue;
            $tLower = mb_strtolower($tStripped, 'UTF-8');
            if (isset($stop[$tLower]) || isset($stop[$tStripped])) continue;
            $posWeight = pow(pow($DECAY, (float) $idx), $biasExp);
            $candNonCjk[] = [ 'value' => $tStripped, 'weight' => $posWeight ];
          }
          if ($candNonCjk) {
            $picked = $weightedPick($candNonCjk);
            if ($picked !== '') { $chosen = $picked; $path = 'non_cjk_weighted'; }
          }
          if ($chosen === '') { $chosen = $s; $path = 'raw_text'; }

          $hasCjk = (bool) preg_match('/[\x{3040}-\x{30FF}\x{4E00}-\x{9FFF}]/u', $strAll);
          $textSrc = ($strAll !== '') ? $strAll : $s;
          if ($hasCjk) {
            $pickedByMroonga = '';
            try {
              $tokensFromM = $this->mroongaTokenize($textSrc);
              if ($tokensFromM) {
                $jaStop = isset($STOP['ja']) && is_array($STOP['ja']) ? array_fill_keys($STOP['ja'], true) : [];
                $acc = '';
                foreach ($tokensFromM as $idx => $tokRaw) {
                  // Stop on punctuation/space tokens as boundaries.
                  if (preg_match('/^[\p{P}\p{S}\s]+$/u', (string) $tokRaw)) break;
                  // Clean edges of punctuation/spaces.
                  $u = preg_replace('/^[\p{P}\p{S}\s]+|[\p{P}\p{S}\s]+$/u', '', (string) $tokRaw);
                  if ($u === '') break;
                  // Stop at stopwords when encountered.
                  if (isset($jaStop[$u])) break;
                  // Numbers: skip if nothing accumulated yet, otherwise stop.
                  if ($isNumeric($u)) { if ($acc !== '') break; else continue; }
                  // If adding this token would exceed max, add partial then stop.
                  $remain = $cjkMaxLen - $gLen($acc);
                  if ($remain <= 0) break;
                  $lenU = $gLen($u);
                  if ($lenU > $remain) {
                    // If we have nothing yet and partial would be 1 char, try to skip this token to seek a better next; otherwise add partial.
                    if ($acc === '' && $remain < 2) {
                      continue;
                    }
                    $acc .= $gSub($u, $remain);
                    break;
                  }
                  $acc .= $u;
                  if ($gLen($acc) >= $cjkMaxLen) break;
                }
                // Finalize: must be >=2 chars to be useful.
                if ($gLen($acc) >= 2) {
                  $pickedByMroonga = $acc;
                }
              }
            } catch (\Throwable $e) {}
            if ($pickedByMroonga !== '') {
              $chosen = $pickedByMroonga; $path = 'mroonga_concat';
            } else {
              $jaStop = isset($STOP['ja']) && is_array($STOP['ja']) ? array_fill_keys($STOP['ja'], true) : [];
              $unitsAll = [];
              if (preg_match_all('/(?:[\x{4E00}-\x{9FFF}]+|[\x{3040}-\x{309F}]+|[\x{30A0}-\x{30FF}ー]+|[A-Za-z0-9]+|[^\s])/u', $textSrc, $mAll)) {
                foreach ($mAll[0] as $tok) {
                  $tok = preg_replace('/^[\p{P}\p{S}]+|[\p{P}\p{S}]+$/u', '', $tok);
                  if ($tok !== '') $unitsAll[] = $tok;
                }
              }
              $firstUnit = '';
              foreach ($unitsAll as $u) {
                if (isset($jaStop[$u])) break;
                $u2 = preg_replace('/^[\p{P}\p{S}]+|[\p{P}\p{S}]+$/u', '', $u);
                if ($u2 === '' || $isNumeric($u2) || $gLen($u2) < 2) continue;
                $firstUnit = $u2; break;
              }
              if ($firstUnit !== '') {
                $chosen = $gSub($firstUnit, $cjkMaxLen); $path = 'regex_first_unit';
              }
            }
          }

          if ($isNumeric($chosen)) $chosen = '';
          $chosen = str_replace([',', '，'], '', $chosen);
          if ($chosen !== '' && $textSrc !== '' && mb_strpos($textSrc, $chosen, 0, 'UTF-8') === false) {
            $chosen = '';
          }

          return [ 'display' => $chosen, 'path' => $path, 'src' => $textSrc ];
        };

        $examples = [];
        $seen = [];
        $normalizeDisp = function (string $s): string {
          $s = trim($s);
          if ($s === '') return '';
          if (function_exists('mb_strtolower')) $s = mb_strtolower($s, 'UTF-8');
          $s = preg_replace('/[\s\x{3000}]+/u', ' ', $s);
          $s = preg_replace('/^[\p{P}\p{S}]+|[\p{P}\p{S}]+$/u', '', $s);
          return (string) $s;
        };
        foreach ($exampleSource as $t) {
          if (count($examples) >= 5) break;
          $res = $formatExample((string) $t);
          $display = is_array($res) ? (string) ($res['display'] ?? '') : (string) $res;
          $path = is_array($res) ? (string) ($res['path'] ?? 'unknown') : 'unknown';
          if ($display === '') continue;
          $dispKey = $normalizeDisp($display);
          if ($dispKey === '') continue;
          if (!isset($seen[$dispKey])) {
            $seen[$dispKey] = true;
            $srcVal = (string) $t;
            $examples[] = [ 'display' => $display, 'origin' => 'primary', 'path' => $path, 'src' => $srcVal ];
          }
        }
        // Hard cap to 5 (フォールバック廃止)
        if (count($examples) > 5) {
          $examples = array_slice($examples, 0, 5);
        }
      ?>
      <?php if (!empty($examples)): ?>
        <div class="iiif-sc__examples-row">
          <div class="iiif-sc__examples" aria-label="<?php echo $this->escapeHtml($labelExample); ?>">
            <span class="iiif-sc__examples-label"><?php echo $this->escapeHtml($labelExample); ?></span>
            <?php foreach ($examples as $i => $ex): ?>
              <?php
                $display = (string) ($ex['display'] ?? '');
                $query = $display;
                $href = $baseUrl . '?fulltext_search=' . rawurlencode($query) . '&logic=' . rawurlencode($logic);
              ?>
              <a class="iiif-sc__example"
                 href="<?php echo $this->escapeHtml($href); ?>"
                 title="<?php echo $this->escapeHtml($display); ?>"
                 data-origin="<?php echo $this->escapeHtml((string) ($ex['origin'] ?? '')); ?>"
                 data-path="<?php echo $this->escapeHtml((string) ($ex['path'] ?? '')); ?>"
                 data-src="<?php echo $this->escapeHtml(mb_substr((string) ($ex['src'] ?? ''), 0, 40, 'UTF-8')); ?>">
                <?php echo $this->escapeHtml($display); ?>
              </a>
            <?php endforeach; ?>
          </div>
        </div>
      <?php endif; ?>
      <div id="multi-search-hidden" aria-hidden="true" style="display:none"></div>
    </form>
    </div>
  <?php endif; ?>
  <script>window.IIIF_SC_DURATION=<?php echo (int) $duration; ?>;</script>
</section>