<?php
// $rows, $ratioDefault, $ratioSm, $ratioMd, $bpSm, $bpMd, $duration, $blockId, $customCss, $resourceTargets, $trimTop, $trimRight, $trimBottom, $trimLeft, $showSearch
// Resource targets: items / media / item_sets
$controllerMap = [
  'items' => 'item',
  'media' => 'media',
  'item_sets' => 'item-set',
];
$initialTarget = is_array($resourceTargets) && $resourceTargets ? $resourceTargets[0] : 'items';
$controller = $controllerMap[$initialTarget] ?? 'item';
$searchAction = $this->url('site/resource', ['controller' => $controller, 'action' => 'browse'], true);
$searchValue = $this->escapeHtml($this->params()->fromQuery('search', ''));
// Use module text domain for strings.
$__placeholder = $this->plugin('translate')->__invoke('Search…', 'iiif-search-carousel');
$__buttonLabel = $this->plugin('translate')->__invoke('Search', 'iiif-search-carousel');

// Ensure truncateLen is defined (0 disables truncation)
$truncateLen = isset($truncateLen) ? (int) $truncateLen : 0;

// Helper: truncate title safely (UTF-8). 0 = no truncation.
$__truncate = function ($s) use ($truncateLen) {
  $s = (string) $s;
  $n = (int) ($truncateLen ?? 0);
  if ($n <= 0) return $s;
  if (function_exists('mb_strlen') && function_exists('mb_substr')) {
    return (mb_strlen($s, 'UTF-8') > $n)
      ? (mb_substr($s, 0, $n, 'UTF-8') . '…')
      : $s;
  }
  return (strlen($s) > $n) ? (substr($s, 0, $n) . '…') : $s;
};

// Helper: format a percentage with up to 1 decimal without trailing .0
$__fmtPct = function ($v) {
  $v = (float) $v;
  $s = number_format($v, 1, '.', '');
  if (substr($s, -2) === '.0') {
    return substr($s, 0, -2);
  }
  return $s;
};

// Precompute region if any trim set
$__hasTrim = ($trimTop > 0 || $trimRight > 0 || $trimBottom > 0 || $trimLeft > 0);
$__region = null;
if ($__hasTrim) {
  $x = max(0.0, (float) $trimLeft);
  $y = max(0.0, (float) $trimTop);
  $w = max(0.1, 100.0 - (float) $trimLeft - (float) $trimRight);
  $h = max(0.1, 100.0 - (float) $trimTop - (float) $trimBottom);
  $__region = 'pct:' . $__fmtPct($x) . ',' . $__fmtPct($y) . ',' . $__fmtPct($w) . ',' . $__fmtPct($h);
}
?>
<section class="iiif-sc" id="iiif-sc-<?php echo (int) $blockId; ?>">
  <style>
    /* Scoped responsive aspect ratios for this block */
    #iiif-sc-<?php echo (int) $blockId; ?> .iiif-sc__bg { aspect-ratio: <?php echo $this->escapeHtml($ratioDefault); ?>; }
<?php if (!empty($ratioMd) && !empty($bpMd)): ?>
    @media (max-width: <?php echo (int) $bpMd; ?>px) {
      #iiif-sc-<?php echo (int) $blockId; ?> .iiif-sc__bg { aspect-ratio: <?php echo $this->escapeHtml($ratioMd); ?>; }
    }
<?php endif; ?>
<?php if (!empty($ratioSm) && !empty($bpSm)): ?>
    @media (max-width: <?php echo (int) $bpSm; ?>px) {
      #iiif-sc-<?php echo (int) $blockId; ?> .iiif-sc__bg { aspect-ratio: <?php echo $this->escapeHtml($ratioSm); ?>; }
    }
<?php endif; ?>
  </style>
  <?php if (!empty($customCss)): ?>
    <style>
      /* Custom CSS for #iiif-sc-<?php echo (int) $blockId; ?> */
<?php echo $customCss; ?>
    </style>
  <?php endif; ?>
  <div class="iiif-sc__bg">
    <?php foreach ($rows as $i => $r): ?>
      <?php
        $imgUrl = $r['image_url'] ?? '';
        if ($__hasTrim && is_string($imgUrl) && $imgUrl !== '') {
          // Replace the region segment '/full/' with '/pct:x,y,w,h/'.
          // Be conservative: only replace the first occurrence of '/full/'.
          $pos = strpos($imgUrl, '/full/');
          if ($pos !== false) {
            $imgUrl = substr($imgUrl, 0, $pos + 1) . $__region . '/' . substr($imgUrl, $pos + 6);
          }
        }
      ?>
      <?php
        $href = !empty($r['related_url']) ? $r['related_url'] : null;
        $debugOriginal = $href;
        if (is_string($href)) {
          // Normalize whitespace
          $href = trim($href);
          // Internal token strict patterns
            if (preg_match('/^omeka:media:(\d+)$/', $href, $mm)) {
              $id = (int) $mm[1];
              if ($id > 0) {
                $site = $this->currentSite();
                $slug = $site ? $site->slug() : 'site';
                // CleanUrl対応の resource-id ルートを使用（CleanUrlが有効なら識別子URLに変換）
                $hrefBuilt = $this->url('site/resource-id', [
                  'site-slug' => $slug,
                  'controller' => 'media',
                  'id' => $id,
                ], ['reuse_result_params' => false], false);
                $href = $hrefBuilt;
              } else { $href = null; }
            }
            elseif (preg_match('/^omeka:item:(\d+)$/', $href, $mi)) {
              $id = (int) $mi[1];
              if ($id > 0) {
                $site = $this->currentSite();
                $slug = $site ? $site->slug() : 'site';
                $hrefBuilt = $this->url('site/resource-id', [
                  'site-slug' => $slug,
                  'controller' => 'item',
                  'id' => $id,
                ], ['reuse_result_params' => false], false);
                $href = $hrefBuilt;
              } else { $href = null; }
            }
            // API or pretty item URL (convert to site route)
            elseif (preg_match('#/api/items/(\d+)(?:$|[/?])#', $href, $m)) {
              $id = (int) $m[1];
              $site = $this->currentSite();
              $slug = $site ? $site->slug() : 'site';
              $hrefBuilt = $this->url('site/resource-id', [
                'site-slug' => $slug,
                'controller' => 'item',
                'id' => $id,
              ], ['reuse_result_params' => false], false);
              $href = $hrefBuilt;
            }
            elseif (preg_match('#/(?:s/[^/]+/)?item/(\d+)(?:$|[/?])#', $href, $m)) {
              $id = (int) $m[1];
              $site = $this->currentSite();
              $slug = $site ? $site->slug() : 'site';
              $hrefBuilt = $this->url('site/resource-id', [
                'site-slug' => $slug,
                'controller' => 'item',
                'id' => $id,
              ], ['reuse_result_params' => false], false);
              $href = $hrefBuilt;
            }
            // Unsafe show pages without id (with optional query/fragment) -> drop
            elseif (preg_match('#/(?:s/[^/]+/)?(?:item|media)/show(?:[?#].*)?$#', $href)) {
              $href = null;
            }
        }
      ?>
      <?php $labelFull = (string) ($r['label'] ?? ''); $labelShort = $__truncate($labelFull); ?>
  <a class="iiif-sc__slide<?php if ($i === 0) echo ' is-active'; ?>"<?php if ($href): ?> href="<?php echo $this->escapeHtml($href); ?>"<?php endif; ?> data-orig="<?php echo $this->escapeHtml($debugOriginal); ?>" data-final="<?php echo $this->escapeHtml((string)$href); ?>" aria-label="<?php echo $this->escapeHtml($labelFull); ?>">
        <img src="<?php echo $this->escapeHtml($imgUrl); ?>" alt="" loading="eager" decoding="async">
        <?php if ($labelFull !== ''): ?>
          <span class="iiif-sc__caption"<?php if ($labelShort !== $labelFull): ?> title="<?php echo $this->escapeHtml($labelFull); ?>"<?php endif; ?>>
            <?php echo $this->escapeHtml($labelShort); ?>
          </span>
        <?php endif; ?>
      </a>
    <?php endforeach; ?>
  </div>

  <?php if (!empty($showSearch)): ?>
    <div class="iiif-sc__overlay">
          <form class="iiif-sc__search search-form search-form--inline" method="get" action="<?php echo $searchAction; ?>" aria-label="<?php echo $this->escapeHtml($this->plugin('translate')->__invoke('Carousel search form', 'iiif-search-carousel')); ?>">
            <div class="iiif-sc__controls">
              <input type="search" id="multi-search-input" name="search" value="<?php echo $searchValue; ?>" placeholder="<?php echo $this->escapeHtml($__placeholder); ?>" aria-label="<?php echo $this->escapeHtml($this->plugin('translate')->__invoke('Search keywords', 'iiif-search-carousel')); ?>" pattern=".*\S.*" required class="search-form__input">
              <fieldset class="multi-search-logic">
                <legend class="show-for-sr"><?php echo $this->escapeHtml($this->plugin('translate')->__invoke('Logic', 'iiif-search-carousel')); ?></legend>
                <label class="logic-option">
                  <input type="radio" name="logic" value="and" checked> <?php echo $this->escapeHtml($this->plugin('translate')->__invoke('AND', 'iiif-search-carousel')); ?>
                </label>
                <?php $tooltipDisabledOr = $this->plugin('translate')->__invoke('OR is currently disabled (search uses AND).', 'iiif-search-carousel'); ?>
                <label class="logic-option is-disabled" aria-disabled="true" title="<?php echo $this->escapeHtml($tooltipDisabledOr); ?>">
                  <input type="radio" name="logic" value="or" disabled aria-disabled="true"> <?php echo $this->escapeHtml($this->plugin('translate')->__invoke('OR', 'iiif-search-carousel')); ?>
                </label>
              </fieldset>
              <button type="submit" class="button"><?php echo $this->escapeHtml($__buttonLabel); ?></button>
            </div>
        <?php if (!empty($exampleTerms) && is_array($exampleTerms)): ?>
          <?php
            $labelExample = $this->plugin('translate')->__invoke('For example:', 'iiif-search-carousel');
            $controllerMap = [
              'items' => 'item',
              'media' => 'media',
              'item_sets' => 'item-set',
            ];
            $initialTarget = is_array($resourceTargets) && $resourceTargets ? $resourceTargets[0] : 'items';
            $controller = $controllerMap[$initialTarget] ?? 'item';
            $baseUrl = $this->url('site/resource', ['controller' => $controller, 'action' => 'browse'], true);
            // Formatter for example terms:
            // - remove half-width brackets from display only
            // - split by half-width or full-width spaces into tokens
            // - pick the first non-stopword token (multilingual)
            //   if all tokens are stopwords, fall back to the first token
            // - CJK (ja/zh) の場合のみ 8 文字に丸める（単語分割しない言語向け）
            //   欧米系など分かち書き言語は単語途中で切らず（=トークンそのまま）、最初のスペースまでを候補とする
            // - remove comma characters from the displayed token
            $formatExample = function ($s) {
              $s = (string) $s;
              // 軽微な括弧の除去（表示のみ）
              $s = preg_replace('/[\[\]\(\)\<\>]/u', '', $s);
              // 文字化け防止のため、全体の前後にある記号・句読点を安全に除去
              $s = preg_replace('/^[\p{P}\p{S}\s\x{3000}]+|[\p{P}\p{S}\s\x{3000}]+$/u', '', $s);
              // Tokenize by space (half- or full-width). Keep all tokens for stopword skipping.
              $tokens = preg_split('/[\s\x{3000}]+/u', $s, -1, PREG_SPLIT_NO_EMPTY);
              // Load multilingual stopwords from JSON once (cache in static)
              static $STOP = null;
              if ($STOP === null) {
                $jsonPath = __DIR__ . '/../../../config/stopwords.json';
                $STOP = [];
                if (is_readable($jsonPath)) {
                  $raw = @file_get_contents($jsonPath);
                  if (is_string($raw) && $raw !== '') {
                    $dec = json_decode($raw, true);
                    if (is_array($dec)) { $STOP = $dec; }
                  }
                }
              }
              // Heuristics: derive candidate languages by script presence
              $cands = [];
              $strAll = implode(' ', $tokens);
              if (preg_match('/[\x{3040}-\x{30FF}\x{4E00}-\x{9FFF}]/u', $strAll)) { $cands[] = 'ja'; }
              if (preg_match('/[A-Za-z]/', $strAll)) { array_push($cands, 'en', 'de', 'fr', 'es', 'it', 'la'); }
              if (preg_match('/[\x{0370}-\x{03FF}]/u', $strAll)) { $cands[] = 'el'; }
              if (!$cands) { $cands = ['en']; }
              // Merge stopwords for candidates (normalize to lowercase where applicable)
              $stop = [];
              foreach ($cands as $lang) {
                if (!empty($STOP[$lang]) && is_array($STOP[$lang])) {
                  foreach ($STOP[$lang] as $w) { $stop[$w] = true; }
                }
              }
              $chosen = '';
              if (!empty($tokens)) {
                foreach ($tokens as $t) {
                  // Trim surrounding punctuation for accurate stopword matching
                  $tStripped = trim($t, ".,;:!?\"'()[]{}<>");
                  // mbstring 前提で小文字化
                  $tLower = mb_strtolower($tStripped, 'UTF-8');
                  // English-family languages are case-insensitive; Japanese/Greek entries are literal
                  $key1 = $tLower;
                  $key2 = $tStripped; // for scripts without case
                  if ($tLower === '' || isset($stop[$key1]) || isset($stop[$key2])) {
                    continue;
                  }
                  $chosen = $tStripped;
                  break;
                }
                if ($chosen === '') {
                  // All tokens were stopwords: use the first raw token
                  $chosen = $tokens[0];
                }
              }
              // If no tokens (e.g., only brackets removed), fall back to the original string
              if ($chosen === '') {
                $chosen = $s;
              }
              // Apply 8-char truncation ONLY for CJK (Japanese/Chinese) content; for space-delimited languages, keep the full token uncut
              $hasCjk = (bool) preg_match('/[\x{3040}-\x{30FF}\x{4E00}-\x{9FFF}]/u', $strAll);
              if ($hasCjk) {
                // グラフェムクラスタ単位の長さ/切り出し（intl不要、PCREの\Xを使用）
                if (!function_exists('iiif_sc_grapheme_len')) {
                  function iiif_sc_grapheme_len(string $str): int {
                    if ($str === '') return 0;
                    if (preg_match_all('/\X/u', $str, $m)) { return count($m[0]); }
                    return mb_strlen($str, 'UTF-8');
                  }
                }
                if (!function_exists('iiif_sc_grapheme_sub')) {
                  function iiif_sc_grapheme_sub(string $str, int $n): string {
                    if ($n <= 0 || $str === '') return '';
                    if (preg_match_all('/\X/u', $str, $m)) { return implode('', array_slice($m[0], 0, $n)); }
                    return mb_substr($str, 0, $n, 'UTF-8');
                  }
                }

                // 形態素風に分割して8文字以内で連結（mbstring前提）
                $jaStop = isset($STOP['ja']) && is_array($STOP['ja']) ? array_fill_keys($STOP['ja'], true) : [];
                $segmentJa = function (string $text) use ($jaStop): array {
                  $units = [];
                  // 連続する 漢字 / ひらがな / カタカナ(長音記号含む) / 英数 / その他1文字 をトークン化
                  if (preg_match_all('/(?:[\x{4E00}-\x{9FFF}]+|[\x{3040}-\x{309F}]+|[\x{30A0}-\x{30FF}ー]+|[A-Za-z0-9]+|[^\s])/u', $text, $m)) {
                    foreach ($m[0] as $tok) {
                      // 前後の記号・句読点をUnicode特性で除去（マルチバイト安全）
                      $tok = preg_replace('/^[\p{P}\p{S}]+|[\p{P}\p{S}]+$/u', '', $tok);
                      if ($tok === '') { continue; }
                      // ストップワード（助詞等）はユニットから除外
                      if (isset($jaStop[$tok])) { continue; }
                      $units[] = $tok;
                    }
                  }
                  return $units;
                };
                $units = $segmentJa($chosen);
                if ($units) {
                  $acc = '';
                  foreach ($units as $u) {
                    $next = $acc . $u;
                    if (iiif_sc_grapheme_len($next) <= 8) {
                      $acc = $next;
                    } else {
                      break;
                    }
                  }
                  if ($acc !== '') {
                    $chosen = $acc;
                  } else {
                    // 最初のユニットすら入らない場合は先頭8クラスタにフォールバック
                    $chosen = iiif_sc_grapheme_sub($chosen, 8);
                  }
                } else {
                  // 分割できなければ先頭8クラスタ
                  $chosen = iiif_sc_grapheme_sub($chosen, 8);
                }
              }
              // Remove comma characters from display
              $chosen = str_replace([',', '，'], '', $chosen);
              return $chosen;
            };
          ?>
          <div class="iiif-sc__examples-row">
            <div class="iiif-sc__examples" aria-label="<?php echo $this->escapeHtml($labelExample); ?>">
              <span class="iiif-sc__examples-label"><?php echo $this->escapeHtml($labelExample); ?></span>
              <?php foreach ($exampleTerms as $i => $term): ?>
                <?php
                  $q = (string) $term;
                  $display = $formatExample($q);
                  // 実際の検索クエリも表示ラベルと同一にする（空なら元の語にフォールバック）
                  $query = ($display !== '') ? $display : $q;
                  $href = $baseUrl . '?search=' . rawurlencode($query);
                ?>
                <a class="iiif-sc__example" href="<?php echo $this->escapeHtml($href); ?>" title="<?php echo $this->escapeHtml($display); ?>"><?php echo $this->escapeHtml($display); ?></a>

              <?php endforeach; ?>
            </div>
          </div>
        <?php endif; ?>
        <div id="multi-search-hidden" aria-hidden="true" style="display:none"></div>
      </form>
    </div>
  <?php endif; ?>

  <script>window.IIIF_SC_DURATION=<?php echo (int) $duration; ?>;</script>
</section>
